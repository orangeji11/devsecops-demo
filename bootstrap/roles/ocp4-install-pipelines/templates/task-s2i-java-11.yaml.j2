apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: s2i java 11
    tekton.dev/pipelines.minVersion: 0.11.3
    tekton.dev/tags: 's2i, java, workspace'
  name: s2i-java-11
  namespace: cicd
spec:
  description: >-
    s2i-java-11 task clones a Git repository and builds and pushes a container
    image using S2I and a Java 11 builder image.
  params:
    - default: .
      description: The location of the path to run s2i from
      name: PATH_CONTEXT
    - default: 'true'
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      name: TLSVERIFY
    - default: ''
      description: Additional Maven arguments
      name: MAVEN_ARGS_APPEND
    - default: 'false'
      description: Remove the Maven repository after the artifact is built
      name: MAVEN_CLEAR_REPO
    - default: ''
      description: The base URL of a mirror used for retrieving artifacts
      name: MAVEN_MIRROR_URL
    - description: Location of the repo where image has to be pushed
      name: IMAGE_NAME
    - default: latest
      description: The tag of the image to be pushed
      name: IMAGE_TAG
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - args:
        - |-
          echo "MAVEN_CLEAR_REPO=$(params.MAVEN_CLEAR_REPO)" > env-file

          [[ '$(params.MAVEN_ARGS_APPEND)' != "" ]] &&
            echo "MAVEN_ARGS_APPEND=$(params.MAVEN_ARGS_APPEND)" >> env-file

          [[ '$(params.MAVEN_MIRROR_URL)' != "" ]] &&
            echo "MAVEN_MIRROR_URL=$(params.MAVEN_MIRROR_URL)" >> env-file

          echo "Generated Env file"
          echo "------------------------------"
          cat env-file
          echo "------------------------------"
      command:
        - /bin/sh
        - '-c'
      image: >-
        registry.uniontech.com/uccps-operators/source-to-image:1.3.1
      name: gen-env-file
      resources: {}
      volumeMounts:
        - mountPath: /env-params
          name: envparams
      workingDir: /env-params
    - command:
        - s2i
        - build
        - $(params.PATH_CONTEXT)
        - 'image-registry.openshift-image-registry.svc:5000/openshift/java:openjdk-11'
        - '--image-scripts-url'
        - 'image:///usr/local/s2i'
        - '--as-dockerfile'
        - /gen-source/Dockerfile.gen
        - '--environment-file'
        - /env-params/env-file
      image: >-
        registry.uniontech.com/uccps-operators/source-to-image:1.3.1
      name: generate
      resources: {}
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /env-params
          name: envparams
      workingDir: $(workspaces.source.path)
    - command:
        - buildah
        - bud
        - '--storage-driver=vfs'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--layers'
        - '-f'
        - /gen-source/Dockerfile.gen
        - '-t'
        - '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - '-t'
        - '$(params.IMAGE_NAME):latest'
        - .
      image: >-
        registry.uniontech.com/uccps-operators/buildah:1.3.1
      name: build
      resources: {}
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
    - command:
        - buildah
        - push
        - '--storage-driver=vfs'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--digestfile'
        - $(workspaces.source.path)/image-digest
        - '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - 'docker://$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
      image: >-
        registry.uniontech.com/uccps-operators/buildah:1.3.1
      name: push-tag
      resources: {}
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
    - command:
        - buildah
        - push
        - '--storage-driver=vfs'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--digestfile'
        - $(workspaces.source.path)/image-digest
        - '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - 'docker://$(params.IMAGE_NAME):latest'
      image: >-
        registry.uniontech.com/uccps-operators/buildah:1.3.1
      name: push-latest
      resources: {}
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
    - image: >-
        registry.uniontech.com/uccps-operators/buildah:1.3.1
      name: digest-to-results
      resources: {}
      script: >-
        cat $(workspaces.source.path)/image-digest | tee
        /tekton/results/IMAGE_DIGEST
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: envparams
  workspaces:
    - mountPath: /workspace/source
      name: source
